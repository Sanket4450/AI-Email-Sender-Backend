model Contact {
  id                     String                  @id @default(cuid())
  name                   String
  position               String
  email                  String
  phone                  String?
  linkedInUrl            String?
  location               String?
  contactTags            ContactTag[]
  companyId              String?
  events                 ContactEvent[]
  company                Company?                @relation(fields: [companyId], references: [id])
  contactDrafts          DraftContact[]
  emails                 Email[]
  isDeleted              Boolean                 @default(false)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt

  @@index([name, email])
  @@map("contact")
}

model ContactTag {
  contactId String
  tagId     String
  contact   Contact @relation(fields: [contactId], references: [id])
  tag       Tag     @relation(fields: [tagId], references: [id])

  @@id([contactId, tagId])
  @@map("contact_tag")
}

model ContactEvent {
  id        String           @id @default(cuid())
  contactId String
  contact   Contact          @relation(fields: [contactId], references: [id])
  eventType ContactEventType
  createdAt DateTime         @default(now())

  @@map("contact_event")
}

enum ContactEventType {
  notContacted
  emailSent
  rejected
  pending
  replied
}
