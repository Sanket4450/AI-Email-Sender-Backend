model Email {
  id             String         @id @default(cuid())
  subject        String
  body           String
  contactId      String
  contact        Contact        @relation(fields: [contactId], references: [id])
  isBounced      Boolean        @default(false)
  isSpamReported Boolean        @default(false)
  senderId       String
  sender         Sender         @relation(fields: [senderId], references: [id])
  events         EmailEvent[]
  notifications  Notification[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@index([subject])
  @@map("email")
}

model EmailEvent {
  id        String         @id @default(cuid())
  emailId   String
  email     Email          @relation(fields: [emailId], references: [id])
  eventType EmailEventType
  createdAt DateTime       @default(now())

  @@map("email_event")
}

enum EmailEventType {
  processed
  delivered
  opened
  clicked
}

model ScheduledEmail {
  id            String                  @id @default(cuid())
  subject       String
  body          String
  scheduledAt   DateTime
  senderId      String
  sender        Sender                  @relation(fields: [senderId], references: [id])
  emailContacts ScheduledEmailContact[]
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt

  @@index([subject])
  @@map("scheduled_email")
}

model ScheduledEmailContact {
  contactId String
  contact   Contact        @relation(fields: [contactId], references: [id])
  emailId   String
  email     ScheduledEmail @relation(fields: [emailId], references: [id])

  @@id([emailId, contactId])
  @@map("scheduled_email_contact")
}

model Draft {
  id            String         @id @default(cuid())
  subject       String?
  body          String?
  draftContacts DraftContact[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([subject])
  @@map("draft")
}

model DraftContact {
  draftId   String
  contactId String
  draft     Draft   @relation(fields: [draftId], references: [id])
  contact   Contact @relation(fields: [contactId], references: [id])

  @@id([draftId, contactId])
  @@map("draft_contact")
}
