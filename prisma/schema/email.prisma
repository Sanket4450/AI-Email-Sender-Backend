model Email {
  id             String         @id @default(cuid())
  subject        String
  body           String
  contactId      String
  recipient      Contact        @relation(fields: [contactId], references: [id])
  scheduledAt    DateTime?
  isBounced      Boolean        @default(false)
  isSpamReported Boolean        @default(false)
  events         EmailEvent[]
  notifications  Notification[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@index([subject])
  @@map("email")
}

model EmailEvent {
  id        String    @id @default(cuid())
  emailId   String
  email     Email     @relation(fields: [emailId], references: [id])
  eventType EventType
  createdAt DateTime  @default(now())

  @@map("email_event")
}

enum EventType {
  PROCESSED
  DELIVERED
  OPENED
  CLICKED
}

model Draft {
  id         String         @id @default(cuid())
  subject    String?
  body       String?
  recipients DraftContact[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  @@index([subject])
  @@map("draft")
}

model DraftContact {
  draftId   String
  contactId String
  draft     Draft   @relation(fields: [draftId], references: [id])
  contact   Contact @relation(fields: [contactId], references: [id])

  @@id([draftId, contactId])
  @@map("draft_contact")
}
